@inherits FieldBase

<MudTextField Label="Password" T="string" Class="@Class" @bind-Value="@User.Password" 
              @oninput="@(async e => await UserChanged.InvokeAsync())"
              InputType="InputType.Password"  Immediate="true"
              Validation="@(Validation)" Required="true"/>

@code {

    private const int MinPasswordLength = 8;

    [Parameter]
    public User User { get; set; }

    [Parameter]
    public EventCallback<User> UserChanged { get; set; }

    private Func<string, IEnumerable<string>> Validation =>
                new Func<string, IEnumerable<string>>(GetPasswordErrors);

    private IEnumerable<string> GetPasswordErrors(string password)
    {
        if (password is null)
        {
            yield break;
        }
        if (password.Length < MinPasswordLength)
        {
            yield return $"The password must be at least {MinPasswordLength} characters long";
        }
        if (!password.Any(c => char.IsLower(c)))
        {
            yield return $"The password must containt at least one lower case letter";
        }
        if (!password.Any(c => char.IsUpper(c)))
        {
            yield return $"The password must containt at least one upper case letter";
        }
        if (!password.Any(c => char.IsDigit(c)))
        {
            yield return $"The password must containt at least one digit";
        }
    }
}
